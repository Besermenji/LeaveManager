@{  LeaveManager.Models.Employee user = (LeaveManager.Models.Employee)HttpContext.Current.Session["user"]; }
@{  List<string> roles = (List<string>)HttpContext.Current.Session["roles"]; }
@model LeaveManager.Models.AccountSettingsViewModel

@{
    ViewBag.Title = "AccountSettings";
}

<h2>Account Settings</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeID)


        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeEmail, "", new { @class = "text-danger" })
       
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @{
        string view = "";

        if (roles.Contains("Super User"))
        {
            view = "EmployeeLeaveRequestViewModels";
        }
        else if (roles.Contains("Department Manager"))
        {
            view = "DepartmentManagerLeaveRequestViewModels";
        }
        else if (roles.Contains("Delivery Manager"))
        {
            view = "DeliveryManagerViewModel";
        }
        else if (roles.Contains("Worker"))
        {
            view = "EmployeeLeaveRequestViewModels";
        }
        else
        {
            view = "EmployeeLeaveRequestViewModels";
        }

        @Html.ActionLink("Cancel", "Index", view)
    }
   

    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
