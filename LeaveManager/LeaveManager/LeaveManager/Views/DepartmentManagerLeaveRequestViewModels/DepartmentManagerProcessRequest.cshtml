@model LeaveManager.Models.DepartmentManagerLeaveRequestViewModel

@{
    ViewBag.Title = "Process Request";
}

<h2></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Process Request</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LeaveRequestID)


        @Html.LabelFor(model => model.Employee.EmployeeName) : @ViewData["employeeName"]<br/><br/>
       
        @if ((bool)@ViewData["allDayEvent"])
        {

            @Html.LabelFor(model => model.StartTime) <text>:</text> @ViewData["startTime"].ToString().Split(' ')[0] <br /><br />
            @Html.LabelFor(model => model.EndTime) <text>:</text>  @ViewData["endTime"].ToString().Split(' ')[0] <br /><br />
        }
        else
        {
           @Html.LabelFor(model => model.StartTime) <text>:</text> @ViewData["startTime"]<br /><br />
           @Html.LabelFor(model => model.EndTime) <text>:</text> @ViewData["endTime"]<br /><br />
        }

      
       
        
            
       
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentManagerComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DepartmentManagerComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentManagerComment, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentManagerStatusID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("departmentManagerStatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentManagerStatusID, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.departmentManagerStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("possibleStatuses", null, htmlAttributes: new { @class = "form-control" })
                    @Html.DropDownListFor(model => model.departmentManagerComment, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
